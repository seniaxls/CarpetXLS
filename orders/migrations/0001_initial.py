# Generated by Django 5.1.3 on 2025-02-03 17:54

import django.core.validators
import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('clients', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(default='Короткий ворс', max_length=100, verbose_name='Название услуги')),
                ('product_long_name', models.CharField(default='Короткий ворс', max_length=100, verbose_name='Название услуги')),
                ('product_price', models.IntegerField(default=150, verbose_name='Цена')),
                ('min_amount', models.DecimalField(decimal_places=1, default=1, max_digits=3, verbose_name='Минимальное Кол-во')),
            ],
            options={
                'verbose_name': 'Услуги стирки ковров',
                'verbose_name_plural': 'Услуги стирки ковров',
            },
        ),
        migrations.CreateModel(
            name='ProductAdd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(default='Запах', max_length=100, verbose_name='Название услуги')),
                ('product_long_name', models.CharField(default='Запах', max_length=100, verbose_name='Название услуги')),
                ('product_price', models.IntegerField(default=100, verbose_name='Цена')),
                ('min_amount', models.DecimalField(decimal_places=1, default=1, max_digits=3, verbose_name='Минимальное Кол-во')),
            ],
            options={
                'verbose_name': 'Доп услуги стирки ковров',
                'verbose_name_plural': 'Доп услуги стирки ковров',
            },
        ),
        migrations.CreateModel(
            name='ProductUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size_numb', models.IntegerField(blank=True, default=0, verbose_name='ID')),
                ('size_name', models.CharField(blank=True, default='Штуки', max_length=20)),
                ('size_name_short', models.CharField(blank=True, default='шт', max_length=3)),
            ],
            options={
                'verbose_name': 'Единицы измерения',
                'verbose_name_plural': 'Единицы измерения',
            },
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Название этапа')),
                ('group_stage', models.PositiveIntegerField(help_text='Номер группы, к которой относится этап', verbose_name='Группа этапов')),
                ('super_stage', models.BooleanField(default=False, verbose_name='Супер-этап')),
                ('first_message', models.TextField(blank=True, null=True, verbose_name='Сообщение')),
                ('second_message', models.TextField(blank=True, null=True, verbose_name='Сообщение 2')),
            ],
            options={
                'verbose_name': 'Этап',
                'verbose_name_plural': 'Этапы',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(editable=False, max_length=10, verbose_name='Номер заказа')),
                ('check_call', models.BooleanField(default=False, verbose_name='Позвонить')),
                ('order_sum', models.DecimalField(decimal_places=2, default=0, max_digits=7, verbose_name='Сумма заказа')),
                ('comment', models.TextField(blank=True, default=None, verbose_name='Комментарий')),
                ('create_date', models.DateField(auto_now_add=True, verbose_name='Дата создания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('target_date', models.DateField(blank=True, null=True, verbose_name='Целевая дата')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='clients.client', verbose_name='Клиент')),
                ('user', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('stage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='orders.stage', verbose_name='Этап заказа')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
        migrations.CreateModel(
            name='HistoricalProductOrder',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('message', models.TextField(blank=True, verbose_name='Сообщение')),
                ('width', models.DecimalField(decimal_places=2, default=1, max_digits=4, validators=[django.core.validators.MaxValueValidator(19), django.core.validators.MinValueValidator(0.1)], verbose_name='Ширина')),
                ('height', models.DecimalField(decimal_places=2, default=1, max_digits=4, validators=[django.core.validators.MaxValueValidator(19), django.core.validators.MinValueValidator(0.1)], verbose_name='Длина')),
                ('overlock', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=5, null=True, validators=[django.core.validators.MaxValueValidator(9999), django.core.validators.MinValueValidator(0)], verbose_name='Оверлок')),
                ('allowance', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=5, null=True, validators=[django.core.validators.MaxValueValidator(9999), django.core.validators.MinValueValidator(0)], verbose_name='Надбавка')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('order_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='orders.order', verbose_name='Заказ')),
                ('product', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='orders.product', verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'historical Ковер',
                'verbose_name_plural': 'historical Ковры',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='ProductOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True, verbose_name='Сообщение')),
                ('width', models.DecimalField(decimal_places=2, default=1, max_digits=4, validators=[django.core.validators.MaxValueValidator(19), django.core.validators.MinValueValidator(0.1)], verbose_name='Ширина')),
                ('height', models.DecimalField(decimal_places=2, default=1, max_digits=4, validators=[django.core.validators.MaxValueValidator(19), django.core.validators.MinValueValidator(0.1)], verbose_name='Длина')),
                ('overlock', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=5, null=True, validators=[django.core.validators.MaxValueValidator(9999), django.core.validators.MinValueValidator(0)], verbose_name='Оверлок')),
                ('allowance', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=5, null=True, validators=[django.core.validators.MaxValueValidator(9999), django.core.validators.MinValueValidator(0)], verbose_name='Надбавка')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий')),
                ('history_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('order_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_order', to='orders.order', verbose_name='Заказ')),
                ('product', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='orders.product', verbose_name='Наименование')),
                ('product_add', models.ManyToManyField(blank=True, default=None, related_name='product_add', to='orders.productadd', verbose_name='Доп услуги')),
            ],
            options={
                'verbose_name': 'Ковер',
                'verbose_name_plural': 'Ковры',
            },
        ),
        migrations.CreateModel(
            name='MessageProductOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True, verbose_name='Наименование')),
                ('product_order', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='mesage_order', to='orders.productorder')),
            ],
        ),
        migrations.AddField(
            model_name='productadd',
            name='product_unit',
            field=models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.productunit', verbose_name='Единица измерения'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_unit',
            field=models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.productunit', verbose_name='Единица измерения'),
        ),
        migrations.CreateModel(
            name='SecondProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(default='Стирка пледа', max_length=100, verbose_name='Название услуги')),
                ('product_long_name', models.CharField(default='Стирка пледа', max_length=100, verbose_name='Название услуги')),
                ('product_price', models.IntegerField(default=100, verbose_name='Цена')),
                ('min_amount', models.DecimalField(decimal_places=1, default=1, max_digits=3, verbose_name='Минимальное Кол-во')),
                ('product_unit', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.productunit', verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'Услуги стирки',
                'verbose_name_plural': 'Услуги стирки',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSecondProductOrder',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('second_amount', models.DecimalField(decimal_places=2, default=1, max_digits=4, validators=[django.core.validators.MaxValueValidator(99), django.core.validators.MinValueValidator(0)], verbose_name='Кол-во')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('order_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='orders.order', verbose_name='Заказ')),
                ('product', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='orders.secondproduct', verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'historical Стирка',
                'verbose_name_plural': 'historical Стирка',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='SecondProductOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('second_amount', models.DecimalField(decimal_places=2, default=1, max_digits=4, validators=[django.core.validators.MaxValueValidator(99), django.core.validators.MinValueValidator(0)], verbose_name='Кол-во')),
                ('history_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('order_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='second_product_orders', to='orders.order', verbose_name='Заказ')),
                ('product', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='orders.secondproduct', verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Стирка',
                'verbose_name_plural': 'Стирка',
            },
        ),
        migrations.CreateModel(
            name='HistoricalOrder',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('order_number', models.CharField(editable=False, max_length=10, verbose_name='Номер заказа')),
                ('check_call', models.BooleanField(default=False, verbose_name='Позвонить')),
                ('order_sum', models.DecimalField(decimal_places=2, default=0, max_digits=7, verbose_name='Сумма заказа')),
                ('comment', models.TextField(blank=True, default=None, verbose_name='Комментарий')),
                ('create_date', models.DateField(blank=True, editable=False, verbose_name='Дата создания')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Дата обновления')),
                ('target_date', models.DateField(blank=True, null=True, verbose_name='Целевая дата')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='clients.client', verbose_name='Клиент')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, default=0, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('stage', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='orders.stage', verbose_name='Этап заказа')),
            ],
            options={
                'verbose_name': 'historical Заказ',
                'verbose_name_plural': 'historical Заказы',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='GroupStagePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days_limit', models.PositiveIntegerField(default=30, help_text='Количество дней, за которые будут выводиться заказы. 0 = без ограничений.', verbose_name='Количество последних дней')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.group', verbose_name='Группа пользователей')),
                ('stages', models.ManyToManyField(related_name='group_permissions', to='orders.stage', verbose_name='Доступные этапы')),
            ],
            options={
                'verbose_name': 'Разрешение на этапы',
                'verbose_name_plural': 'Разрешения на этапы',
            },
        ),
    ]
